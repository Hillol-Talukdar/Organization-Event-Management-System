/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package organizationeventmangementsystem;

import DatabaseConnector.DatabaseManager;
import java.awt.Color;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Hillol Talukdar
 */
public class Order extends javax.swing.JFrame {

    /**
     * Creates new form Order
     */
    
    DatabaseManager databaseManager;
    DefaultTableModel model;
    
    public Order() {
        initComponents();
        jPanel1.setFocusable(true);
        read();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderJTable = new javax.swing.JTable();
        quantityjLabel = new javax.swing.JLabel();
        organaizationNamejLabel = new javax.swing.JLabel();
        foodMenuIdjLabel = new javax.swing.JLabel();
        quantityjTextField = new javax.swing.JTextField();
        clearjButton1 = new javax.swing.JButton();
        insertjButton = new javax.swing.JButton();
        deletejButton = new javax.swing.JButton();
        organaizationNameJComboBox = new javax.swing.JComboBox<>();
        foodNameJComboBox = new javax.swing.JComboBox<>();
        searchJTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Order");

        orderJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Id", "Quantity", "Reservation Id", "Food Menu Id"
            }
        ));
        jScrollPane1.setViewportView(orderJTable);

        quantityjLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quantityjLabel.setText("Quantity");

        organaizationNamejLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        organaizationNamejLabel.setText("organaization Name");

        foodMenuIdjLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        foodMenuIdjLabel.setText("Food Name and Price");

        clearjButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        clearjButton1.setText("Clear");
        clearjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearjButton1ActionPerformed(evt);
            }
        });

        insertjButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        insertjButton.setText("Insert");
        insertjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertjButtonActionPerformed(evt);
            }
        });

        deletejButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deletejButton.setText("Delete");
        deletejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletejButtonActionPerformed(evt);
            }
        });

        organaizationNameJComboBox.setMaximumRowCount(50);

        foodNameJComboBox.setMaximumRowCount(50);

        searchJTextField.setForeground(new java.awt.Color(153, 153, 153));
        searchJTextField.setText("Search");
        searchJTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchJTextFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchJTextFieldFocusLost(evt);
            }
        });
        searchJTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchJTextFieldActionPerformed(evt);
            }
        });
        searchJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchJTextFieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 114, Short.MAX_VALUE)
                        .addComponent(searchJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(insertjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deletejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(clearjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(organaizationNamejLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(quantityjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(foodMenuIdjLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(foodNameJComboBox, 0, 221, Short.MAX_VALUE)
                                    .addComponent(organaizationNameJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(quantityjTextField))))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1)))
                .addGap(31, 31, 31))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quantityjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quantityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(organaizationNamejLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                            .addComponent(organaizationNameJComboBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(foodMenuIdjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                            .addComponent(foodNameJComboBox))
                        .addGap(104, 104, 104)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(insertjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearjButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deletejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(searchJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        this.setSize(1400, 750);
    }//GEN-LAST:event_formWindowActivated

    private void clearjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearjButton1ActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_clearjButton1ActionPerformed

    private void insertjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertjButtonActionPerformed
        
        try
        {
            organaization org = new organaization();
            Service service = new Service();
            Reservation reservation = new Reservation();
            FoodMenu foodMenu = new FoodMenu();
            
            String quan = quantityjTextField.getText();
            int  quantity = Integer.parseInt( quan);
            
            String organaizationName = organaizationNameJComboBox.getSelectedItem().toString();
            int organaizationId= org.getOrganaizationId(organaizationName);
            
            int serviceId = service.getServiceId(organaizationId);
            int reservationId = -1;
            
            if(serviceId >=0)
                reservationId = reservation.getReservationId(serviceId);
            
            
            String foodNamePrice = foodNameJComboBox.getSelectedItem().toString();
            String[] namePrice = foodNamePrice.split(", ");
            String foodName = "";
            int price = -1;
            
            for(String i : namePrice)
            {
                if(foodName.isEmpty())
                    foodName = i;
                else if(price == -1)
                    price = Integer.parseInt(i);
                else if(!foodName.isEmpty() && price != -1 )
                    break;
            }
            
            
            int foodMenuId = foodMenu.getFoodMenuId(foodName, price);
            
            if(quan.isEmpty())
            {
                JOptionPane.showMessageDialog(null, "Some Field is still Empty", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else if(reservationId == -1)
            {
                JOptionPane.showMessageDialog(null, "You do not have any Reservation at this Organaization!", "Warning", JOptionPane.WARNING_MESSAGE);
            }
            else
            {
                
               model =  (DefaultTableModel) orderJTable.getModel();
                
                
                databaseManager = DatabaseManager.getInstance();
                String querry = "INSERT INTO tbl_order(or_quantity,reservationId,foodMenuId) VALUES(?,?,?)";
                PreparedStatement pst = databaseManager.getPreparedStatement(querry);
                

                
                pst.setInt(1, quantity);
                pst.setInt(2, reservationId);
                pst.setInt(3, foodMenuId);

                pst.executeUpdate();

                JOptionPane.showMessageDialog(null, "Data inserted successfully!");
                
                read();
                clear();
            }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e, "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_insertjButtonActionPerformed

    private void deletejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletejButtonActionPerformed
        // TODO add your handling code here:
        try
        {
            int row = orderJTable.getSelectedRow();
            delete(row);
        }
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "No index selected", "Warning", JOptionPane.WARNING_MESSAGE);  
        }
    }//GEN-LAST:event_deletejButtonActionPerformed

    private void searchJTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchJTextFieldFocusGained
        // TODO add your handling code here:

        if(searchJTextField.getText().equals("Search"))
        {
            searchJTextField.setText("");
            searchJTextField.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_searchJTextFieldFocusGained

    private void searchJTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchJTextFieldFocusLost
        // TODO add your handling code here:
        if(searchJTextField.getText().equals(""))
        {
            searchJTextField.setText("Search");
            searchJTextField.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_searchJTextFieldFocusLost

    private void searchJTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchJTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchJTextFieldActionPerformed

    private void searchJTextFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchJTextFieldKeyReleased
        // TODO add your handling code here:
        ResultSet rs;
        DatabaseManager orderData = DatabaseManager.getInstance();
        PreparedStatement pst;
        String search = searchJTextField.getText();

        try
        {

            String query = "Select * from tbl_order where orderId Like '%" + search
            + "%' or or_quantity Like '%" + search
            + "%' or reservationId Like '%" + search
            + "%' or foodMenuId Like '%" + search + "%'";

            pst = orderData.getPreparedStatement(query);
            rs = pst.executeQuery();
            orderJTable.setModel(DbUtils.resultSetToTableModel(rs));

        }
        catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, "Please Check Database.Something is Wrong!!", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_searchJTextFieldKeyReleased

    private void clear()
    {
        organaization org = new organaization();
        FoodMenu foodMenu = new FoodMenu();
        
        quantityjTextField.setText(null);
        
        organaizationNameJComboBox.removeAllItems();;
        org.setOrganaizationComboBox(this.organaizationNameJComboBox);
        
        foodNameJComboBox.removeAllItems();
        foodMenu.setFoodNameComboBox(this.foodNameJComboBox);
    }
    
    private void delete(int row) 
    {

        Object index = orderJTable.getValueAt(row, 0);

        try 
        {
            DatabaseManager orderData = DatabaseManager.getInstance();

            String query = "DELETE FROM tbl_order Where orderId = " + index;
            PreparedStatement pst = orderData.getPreparedStatement(query);

            pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "Data Deleted Successfully!", "Connection Status", JOptionPane.INFORMATION_MESSAGE);

            read();
        }
        catch (Exception e) 
        {
            JOptionPane.showMessageDialog(null, "Please Check The Connection Settings!\nOr Fill The From Correctly", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void read() 
    {
        organaization org = new organaization();
        FoodMenu foodMenu = new FoodMenu();
        
        organaizationNameJComboBox.removeAllItems();;
        org.setOrganaizationComboBox(this.organaizationNameJComboBox);
        
        foodNameJComboBox.removeAllItems();
        foodMenu.setFoodNameComboBox(this.foodNameJComboBox);
        
        model = (DefaultTableModel) orderJTable.getModel();
        
        while (model.getRowCount() > 0)
        {
            model.removeRow(0);
        }

        DatabaseManager orderData = DatabaseManager.getInstance();

        if (orderData.checkConnection()) 
        {
            String query = "Select * From tbl_order";
            ResultSet rset = null;
            try 
            {
                rset = orderData.getResult(query);
            } 
            catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(null, "Please Check Database.Something is Wrong!!", "Warning", JOptionPane.WARNING_MESSAGE);
                Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
            try 
            {
                while (rset.next()) 
                {
                    int id = rset.getInt("orderId");
                    int quantity = rset.getInt("or_quantity");
                    int reservationId = rset.getInt("reservationId");
                    int foodMenuId = rset.getInt("foodMenuId");
                    

                    Object[] row = {id, quantity, reservationId, foodMenuId};

                    model = (DefaultTableModel) orderJTable.getModel();

                    model.addRow(row);

                }
            } 
            catch (SQLException ex) 
            {
                JOptionPane.showMessageDialog(null, "Please Check Database.Something is Wrong!!", "Warning", JOptionPane.WARNING_MESSAGE);
                Logger.getLogger(Order.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Order.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Order().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearjButton1;
    private javax.swing.JButton deletejButton;
    private javax.swing.JLabel foodMenuIdjLabel;
    private javax.swing.JComboBox<String> foodNameJComboBox;
    private javax.swing.JButton insertjButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderJTable;
    private javax.swing.JComboBox<String> organaizationNameJComboBox;
    private javax.swing.JLabel organaizationNamejLabel;
    private javax.swing.JLabel quantityjLabel;
    private javax.swing.JTextField quantityjTextField;
    private javax.swing.JTextField searchJTextField;
    // End of variables declaration//GEN-END:variables
}
